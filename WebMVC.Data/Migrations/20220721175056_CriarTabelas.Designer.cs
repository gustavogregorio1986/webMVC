// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebMVC.Data.Contexto;

namespace WebMVC.Data.Migrations
{
    [DbContext(typeof(WebMVCContexto))]
    [Migration("20220721175056_CriarTabelas")]
    partial class CriarTabelas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebMVC.Dominio.Dominio.Aeroporto", b =>
                {
                    b.Property<int>("IdAero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Passageiro")
                        .HasColumnType("int");

                    b.Property<string>("NomeAero")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAero");

                    b.HasIndex("Id_Passageiro");

                    b.ToTable("tb_Aeroporto");
                });

            modelBuilder.Entity("WebMVC.Dominio.Dominio.Aviao", b =>
                {
                    b.Property<int>("IdAviao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Compania")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Aeroporto")
                        .HasColumnType("int");

                    b.Property<string>("NomeAviao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poltrona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Portao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAviao");

                    b.HasIndex("Id_Aeroporto");

                    b.ToTable("tb_Aviao");
                });

            modelBuilder.Entity("WebMVC.Dominio.Dominio.Destino", b =>
                {
                    b.Property<int>("IdDstino")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CidadwDestino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataEmbarque")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Aviao")
                        .HasColumnType("int");

                    b.HasKey("IdDstino");

                    b.HasIndex("Id_Aviao");

                    b.ToTable("tb_Destino");
                });

            modelBuilder.Entity("WebMVC.Dominio.Dominio.Endereco", b =>
                {
                    b.Property<int>("IdEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Passageiro")
                        .HasColumnType("int");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uf")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEndereco");

                    b.HasIndex("Id_Passageiro");

                    b.ToTable("tb_Endereco");
                });

            modelBuilder.Entity("WebMVC.Dominio.Dominio.Origem", b =>
                {
                    b.Property<int>("IdOrigem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CidadwOrigem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataEmbarque")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Aviao")
                        .HasColumnType("int");

                    b.HasKey("IdOrigem");

                    b.HasIndex("Id_Aviao");

                    b.ToTable("tb_Orgem");
                });

            modelBuilder.Entity("WebMVC.Dominio.Dominio.Passageiro", b =>
                {
                    b.Property<int>("IdPassageiro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmaqilPassageiro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePssageiro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPassageiro");

                    b.ToTable("tb_Passageiro");
                });

            modelBuilder.Entity("WebMVC.Dominio.Dominio.Aeroporto", b =>
                {
                    b.HasOne("WebMVC.Dominio.Dominio.Passageiro", "Passageiro")
                        .WithMany()
                        .HasForeignKey("Id_Passageiro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Passageiro");
                });

            modelBuilder.Entity("WebMVC.Dominio.Dominio.Aviao", b =>
                {
                    b.HasOne("WebMVC.Dominio.Dominio.Aeroporto", "Aeroporto")
                        .WithMany()
                        .HasForeignKey("Id_Aeroporto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aeroporto");
                });

            modelBuilder.Entity("WebMVC.Dominio.Dominio.Destino", b =>
                {
                    b.HasOne("WebMVC.Dominio.Dominio.Aviao", "Aviao")
                        .WithMany()
                        .HasForeignKey("Id_Aviao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aviao");
                });

            modelBuilder.Entity("WebMVC.Dominio.Dominio.Endereco", b =>
                {
                    b.HasOne("WebMVC.Dominio.Dominio.Passageiro", "Passageiro")
                        .WithMany()
                        .HasForeignKey("Id_Passageiro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Passageiro");
                });

            modelBuilder.Entity("WebMVC.Dominio.Dominio.Origem", b =>
                {
                    b.HasOne("WebMVC.Dominio.Dominio.Aviao", "Aviao")
                        .WithMany()
                        .HasForeignKey("Id_Aviao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aviao");
                });
#pragma warning restore 612, 618
        }
    }
}
